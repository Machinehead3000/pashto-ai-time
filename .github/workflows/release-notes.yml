name: Generate Release Notes

on:
  release:
    types: [released]

jobs:
  generate-notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for the changelog

      - name: Generate Release Notes
        id: generate_release_notes
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release with Generated Notes
        uses: actions/github-script@v6
        with:
          script: |
            const { data: release } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id
            });
            
            // Only update if the body is empty or contains the default text
            if (!release.body || release.body.includes('## What\'s Changed')) {
              await github.rest.repos.updateRelease({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: context.payload.release.id,
                body: steps.generate_release_notes.outputs.text || 'No changes detected',
                draft: false
              });
            }
